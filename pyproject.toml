[build-system]
requires = [
    "phosphorus>=0.10",
]
build-backend = "phosphorus.construction.api"

[project]
name = "yashiro"
dynamic = [
    "version",
]

authors = [
    { name = "Stephanos Kuma", email = "stephanos@kuma.ai" },
]
license = { text = "BSD-3-Clause" }

readme = "docs/README.md"
description = "A cli template tool based on jinja"
keywords = [
    "templates",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "License :: OSI Approved :: BSD License",
    "Intended Audience :: Developers",
]

requires-python = ">=3.10"
dependencies = [
    "dj_settings~=8.0",
    "jinja2~=3.1",
]

[project.urls]
homepage = "https://yashiro.readthedocs.io/en/stable/"
repository = "https://github.com/spapanik/yashiro"
documentation = "https://yashiro.readthedocs.io/en/stable/"

[project.scripts]
yashiro = "yashiro.__main__:main"

[dependency-groups]
dev = [
    "ipdb~=0.13",
    "ipython~=8.37",
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "docs" },
]
lint = [
    "ty~=0.0.1a8",
    "ruff~=0.12",
    { include-group = "test_core" },
]
test = [
    "pytest-cov~=6.2",
    { include-group = "test_core" },
]
test_core = [
    "pytest~=8.4",
]
docs = [
    "mkdocs~=1.6",
    "mkdocs-material~=9.6",
    "mkdocs-material-extensions~=1.3",
    "pygments~=2.19",
    "pymdown-extensions~=10.15",
]

[tool.phosphorus.dynamic]
version = { file = "src/yashiro/__version__.py" }

[tool.ruff]
src = [
    "src",
]
target-version = "py310"

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "C901",   # Adding a limit to complexity is too arbitrary
    "COM812", # Avoid conflicts with the formatter
    "D10",    # Not everything needs a docstring
    "D203",   # Prefer `no-blank-line-before-class` (D211)
    "D213",   # Prefer `multi-line-summary-first-line` (D212)
    "PLR09",  # Adding a limit to complexity is too arbitrary
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "FBT001",  # Test arguments are handled by pytest
    "PLR2004", # Tests should contain magic number comparisons
    "S101",    # Pytest needs assert statements
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"mock".msg = "Use unittest.mock"
"pytz".msg = "Use zoneinfo"

[tool.ruff.lint.isort]
combine-as-imports = true
forced-separate = [
    "tests",
]
split-on-trailing-comma = false

[tool.pytest.ini_options]
addopts = "-ra -v"
testpaths = "tests"

[tool.coverage.run]
branch = true
source = [
    "src/",
]
data_file = ".cov_cache/coverage.dat"
omit = [
    "src/yashiro/lib/type_defs.py",
]

[tool.coverage.report]
exclude_also = [
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
    "raise UnreachableCodeError",
]
fail_under = 100
precision = 2
show_missing = true
skip_covered = true
skip_empty = true
